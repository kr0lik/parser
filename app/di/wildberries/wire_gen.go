// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package wildberries

import (
	"context"
	"github.com/google/wire"
	"parser/internal/config"
	"parser/internal/config/wildberries"
	"parser/internal/domain/wildberries/repository"
	"parser/internal/domain/wildberries/service"
	"parser/internal/domain/wildberries/useCase"
	"parser/internal/infrastructure/log"
	"parser/internal/infrastructure/mongodb"
	"parser/internal/infrastructure/wildberries/api"
	"parser/internal/infrastructure/wildberries/storage"
)

// Injectors from wire.go:

func InitialiseCollectCategories(ctx context.Context) (*useCase.CollectCategories, error) {
	categoryFilter := wildberries.ProvideCategoryFilter()
	categories := wildberries.ProvideCategories()
	client := api.NewClient()
	logger := log.NewLogger()
	apiCategories := api.NewCategories(categories, client, logger, ctx)
	clientOptions := config.ProvideMongodbClientOptions()
	mongodbClient, err := mongodb.NewClient(clientOptions, ctx)
	if err != nil {
		return nil, err
	}
	category := storage.NewCategory(mongodbClient, ctx)
	collectCategories := useCase.NewCollectCategories(categoryFilter, apiCategories, category, logger, ctx)
	return collectCategories, nil
}

func InitialiseCollectProducts(ctx context.Context) (*useCase.CollectProducts, error) {
	v := wildberries.ProvideProductFilter()
	products := wildberries.ProvideProducts()
	client := api.NewClient()
	logger := log.NewLogger()
	apiProducts := api.NewProducts(products, client, logger, ctx)
	clientOptions := config.ProvideMongodbClientOptions()
	mongodbClient, err := mongodb.NewClient(clientOptions, ctx)
	if err != nil {
		return nil, err
	}
	category := storage.NewCategory(mongodbClient, ctx)
	product := storage.NewProduct(mongodbClient, ctx)
	collectProducts := useCase.NewCollectProducts(v, apiProducts, category, product, logger, ctx)
	return collectProducts, nil
}

// wire.go:

var categoriesParserSet = wire.NewSet(api.NewCategories, api.NewClient, wildberries.ProvideCategories, wire.Bind(new(service.Categories), new(*api.Categories)))

var productsParserSet = wire.NewSet(api.NewProducts, api.NewClient, wildberries.ProvideProducts, wire.Bind(new(service.Products), new(*api.Products)))

var mongoDbSet = wire.NewSet(mongodb.NewClient, config.ProvideMongodbClientOptions)

var categoryRepositorySet = wire.NewSet(storage.NewCategory, wire.Bind(new(repository.Category), new(*storage.Category)))

var productRepositorySet = wire.NewSet(storage.NewProduct, wire.Bind(new(repository.Product), new(*storage.Product)))

var loggerSet = wire.NewSet(log.NewLogger, wire.Bind(new(service.Log), new(*log.Logger)))
